/**
 * @namespace
 * @name Consts
 */
import { IObject, OpenCloseCharacter } from "./types";
/**
* get string "rgb"
* @memberof Color
* @example
import {RGB} from "utility";

console.log(RGB); // "rgb"
*/
export declare const RGB = "rgb";
/**
* get string "rgba"
* @memberof Color
* @example
import {RGBA} from "utility";

console.log(RGBA); // "rgba"
*/
export declare const RGBA = "rgba";
/**
* get string "hsl"
* @memberof Color
* @example
import {HSL} from "utility";

console.log(HSL); // "hsl"
*/
export declare const HSL = "hsl";
/**
* get string "hsla"
* @memberof Color
* @example
import {HSLA} from "utility";

console.log(HSLA); // "hsla"
*/
export declare const HSLA = "hsla";
/**
* gets an array of color models.
* @memberof Color
* @example
import {COLOR_MODELS} from "utility";

console.log(COLOR_MODELS); // ["rgb", "rgba", "hsl", "hsla"];
*/
export declare const COLOR_MODELS: string[];
/**
* get string "function"
* @memberof Consts
* @example
import {FUNCTION} from "utility";

console.log(FUNCTION); // "function"
*/
export declare const FUNCTION = "function";
/**
* get string "property"
* @memberof Consts
* @example
import {PROPERTY} from "utility";

console.log(PROPERTY); // "property"
*/
export declare const PROPERTY = "property";
/**
* get string "array"
* @memberof Consts
* @example
import {ARRAY} from "utility";

console.log(ARRAY); // "array"
*/
export declare const ARRAY = "array";
/**
* get string "object"
* @memberof Consts
* @example
import {OBJECT} from "utility";

console.log(OBJECT); // "object"
*/
export declare const OBJECT = "object";
/**
* get string "string"
* @memberof Consts
* @example
import {STRING} from "utility";

console.log(STRING); // "string"
*/
export declare const STRING = "string";
/**
* get string "number"
* @memberof Consts
* @example
import {NUMBER} from "utility";

console.log(NUMBER); // "number"
*/
export declare const NUMBER = "number";
/**
* get string "undefined"
* @memberof Consts
* @example
import {UNDEFINED} from "utility";

console.log(UNDEFINED); // "undefined"
*/
export declare const UNDEFINED = "undefined";
/**
* Check whether the environment is window or node.js.
* @memberof Consts
* @example
import {IS_WINDOW} from "utility";

console.log(IS_WINDOW); // false in node.js
console.log(IS_WINDOW); // true in browser
*/
export declare const IS_WINDOW: boolean;
/**
* Check whether the environment is window or node.js.
* @memberof Consts
* @name document
* @example
import {IS_WINDOW} from "utility";

console.log(IS_WINDOW); // false in node.js
console.log(IS_WINDOW); // true in browser
*/
declare const doc: Document;
export { doc as document };
/**
 * @namespace CrossBrowser
 */
/**
* Get a CSS property with a vendor prefix that supports cross browser.
* @function
* @param {string} property - A CSS property
* @return {string} CSS property with cross-browser vendor prefix
* @memberof CrossBrowser
* @example
import {getCrossBrowserProperty} from "utility";

console.log(getCrossBrowserProperty("transform")); // "transform", "-ms-transform", "-webkit-transform"
console.log(getCrossBrowserProperty("filter")); // "filter", "-webkit-filter"
*/
export declare const getCrossBrowserProperty: (property: string) => string;
/**
* get string "transfrom" with the vendor prefix.
* @memberof CrossBrowser
* @example
import {TRANSFORM} from "utility";

console.log(TRANSFORM); // "transform", "-ms-transform", "-webkit-transform"
*/
export declare const TRANSFORM: string;
/**
* get string "filter" with the vendor prefix.
* @memberof CrossBrowser
* @example
import {FILTER} from "utility";

console.log(FILTER); // "filter", "-ms-filter", "-webkit-filter"
*/
export declare const FILTER: string;
/**
* get string "animation" with the vendor prefix.
* @memberof CrossBrowser
* @example
import {ANIMATION} from "utility";

console.log(ANIMATION); // "animation", "-ms-animation", "-webkit-animation"
*/
export declare const ANIMATION: string;
/**
* get string "keyframes" with the vendor prefix.
* @memberof CrossBrowser
* @example
import {KEYFRAMES} from "utility";

console.log(KEYFRAMES); // "keyframes", "-ms-keyframes", "-webkit-keyframes"
*/
export declare const KEYFRAMES: string;
export declare const OPEN_CLOSED_CHARACTERS: OpenCloseCharacter[];
export declare const TINY_NUM = 1e-7;
export declare const REVERSE_TINY_NUM: number;
export declare const DEFAULT_UNIT_PRESETS: IObject<(pos: number, size?: number) => number>;
