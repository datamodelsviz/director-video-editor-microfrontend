"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bun_test_1 = require("bun:test");
const min_max_1 = require("../min-max");
(0, bun_test_1.describe)('min() and max()', () => {
    (0, bun_test_1.test)('Implemented min() functions correctly', () => {
        (0, bun_test_1.expect)((0, min_max_1.min)([0, -30, 90, -120, 0])).toBe(-120);
    });
    (0, bun_test_1.test)('Implemented max() functions correctly', () => {
        (0, bun_test_1.expect)((0, min_max_1.max)([0, -30, 90, -120, 0])).toBe(90);
    });
    (0, bun_test_1.test)('min() should throw on empty arr', () => {
        (0, bun_test_1.expect)(() => (0, min_max_1.min)([])).toThrow(/Array of 0 length/);
    });
    (0, bun_test_1.test)('max() should throw on empty arr', () => {
        (0, bun_test_1.expect)(() => (0, min_max_1.min)([])).toThrow(/Array of 0 length/);
    });
    const bigArray = new Array(300000).fill(true).map((_, i) => {
        return i;
    });
    (0, bun_test_1.test)('Custom max() should not throw', () => {
        (0, bun_test_1.expect)((0, min_max_1.max)(bigArray)).toBe(299999);
    });
});
